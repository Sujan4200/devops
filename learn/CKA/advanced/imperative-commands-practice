# Deploy a pod named 'nginx-pod' using the 'nginx:alpine' image.
----------------------------------------------------------------
kubectl run nginx-pod --image=nginx:alpine

# Deploy a 'redis' pod using the 'redis:alpine' image with labels set to 'tier=db'.
-----------------------------------------------------------------------------------
kubectl run redis --image=redis:alpine --labels="tier=db"

# Create service 'redis-service' to expose the 'redis' application within the cluster on port '6379'.
-----------------------------------------------------------------------------------------------------
kubectl create service clusterip redis-service --tcp=6379:6379 (Need to match selector labels manually)
kubectl expose pod redis --port=6379 --name redis-service (Selector labels are matched automatically)

# Create a deployment named 'webapp' using the image 'nginx:alpine' with 3 replicas.
------------------------------------------------------------------------------------
kubectl create deployment webapp --image=nginx:alpine --replicas=3

# Create a new pod called 'custom-nginx' using the 'nginx' image and expose it on container port 8080.
------------------------------------------------------------------------------------------------------
kubectl run custom-nginx --image=nginx --port=8080

# Create a new namespace called 'dev-ns'.
-----------------------------------------
kubectl create ns dev-ns

# Create a new deployment called 'redis-deploy' in 'dev-ns' namespace with 'redis' image and 2 replicas.
--------------------------------------------------------------------------------------------------------
kubectl create deployment redis-deploy --image=redis --replicas=2 -n dev-ns

# Create a pod called 'httpd' using the image 'httpd:alpine' in default namespace.
# Next create a service of type 'ClusterIP' by the same name 'httpd'.
# The targetPort for the service should be 80.
----------------------------------------------------------------------------------
kubectl run httpd --image=httpd:alpine --port=80 --expose=true
